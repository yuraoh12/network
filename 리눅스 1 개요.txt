
1. 리눅스 명령어 기초 강좌, 개요
운영체제 : 컴퓨터 자원(하드웨어)을 관리해주는 소프트웨어
유저모드 ( 유저의 편의성을 위한 유틸, 소프트웨어 ) -> gui, cli로 컨트롤
커널모드 ( 핵심 ) - 자원 관리, 스케쥴링 등 운영체제의 핵심 기능
리눅스 사용 이유
무료!!!!!
gui가 없는 서버용 리눅스는 상대적으로 가볍기 때문에 서버와 같은 특수한 목적으로 사용
리눅스 배포판
기존의 리눅스 커널에 커스터마이징을 적용한 다양한 배포판이 있음. 배포판마다 특징과 장단점이 다르므로, 목적에 맞는 배포판을 골라서 사용하면 됨.
그러나 우리나라 기준, 우분투와 centos를 권장. 실무에서 압도적으로 많이 사용되며, 자료도 굉장히 많은 편.
2. git bash 설치
git download
git을 설치할 때 bash가 번들로 같이 설치되어 윈도우에서 bash쉘을 이용해 간단하게 커널을 다룰 수 있음

3. 쉘
쉘 개념 (터미널 명령어 프로그램)
일종의 인터페이스 프로그램
커널과 유저간의 통역사 같은 역할 (유닉스, 맥os, 윈도우, 리눅스 등 운영체제마다 다른 커널을 일관되게 작업)
프로그래밍 가능
쉘의 종류
Bash, Born Shell, fish, csh 등등..

4. ls 로 파일 리스팅, clear 로 화면 클리어
기본적으로 운영체제는 다룰 수 있어야 함. 윈도우에서 우리가 키보드와 마우스를 이용해 윈도우창을 이용한 컨트롤을 했다면, 리눅스에서는 커맨드(명령어)로 구사함. 때문에 다양한 명령어들을 익혀야 리눅스를 다룰 수 잇음.
리눅스에서 파일명 앞에 .이 붙은 것은 숨김파일
ls는 특정 폴더의 파일 목록을 볼 수 있음.
ls : 그냥 파일 이름만 목록화
ls -l : 파일을 상세하게 볼 수 있음
ls -al : 숨김 파일까지 볼 수 있음.
clear 명령어로 화면을 청소할 수 있음.

5. touch 로 파일 생성
파일 생성 명령어
사용법 : touch [옵션][파일명]
touch 파일명1 파일명2 파일명3 -> 여러개의 파일은 한번에 생성
6. history 명령어로 내가 입력했던 명령어 리스트 보기
입력했던 명령어 리스트 보기
명령어 히스토리에 라인넘버가 매겨져있어서 !를 이용해 해당 라인의 명령을 다시 수행할 수 있음
예) !14 -> 14번째 히스토리 명령어를 다시 수행
7. rm 으로 파일 삭제
파일 삭제
사용법 : rm 파일명
rm 파일명1 파일명2 파일명3 -> 여러개의 파일은 한번에 삭제
rm *a : a로 끝나는 파일 삭제
rm a* : a로 시작하는 파일 삭제
rm * : 해당 폴더의 모든 파일 삭제. 단, 숨김 파일은 삭제되지 않음.

8. tab 키로 파일명 자동완성
파일명 자동 완성
예를 들어 해당 폴더에 k로 시작 파일명을 가진 파일이 하나밖에 없다면 k를 입력한후 tab을 누르면 해당 파일의 이름이 자동완성됨.
만일 k로 시작하는 파일이 2개 이상이라면 나머지는 제외하고 k로 시작하는 파일만 추려서 보여줌.
문제

9. mkdir로 디렉터리 만들기
디렉터리 생성
touch와 마찬가지로 공백을 구분자로 하여 여러개 생성 가능
mkdir a b c -> a, b, c 세개의 디렉터리 생성
10. rmdir로 디렉터리 삭제
디렉터리 삭제
rm과 마찬가지로 공백을 구분자로 하여 여러개 삭제 가능
rmdir a b c -> a, b, c 세개의 디렉터리 삭제
단, 디렉터리 안에 파일이나 폴더가 있으면 삭제되지 않음.
rmdir에 삭제할 대상을 풀경로를 적으면 cd로 타고 들어가지 않고도 삭제 가능하다.
11. 디렉터리 변경 cd
특정 경로로 디렉터리를 이동한다.
사용법 : cd [경로]
절대경로와 상대경로 방식이 있다.
절대경로 -> 루트디렉터리부터 찾아들어감
내가 어디있든 간에 접근 가능
경로를 다쳐야 돼서 불편
상대경로 -> 현재디렉터리부터 찾아들어감
내가 위치한 곳 안쪽으로만 접근 가능
내경로를 생략 가능
경로를 간단하게 표현하는 방법
. : 현재 경로
.. : 상위 경로
- : 이전 경로
~ : 홈 디렉터리

12
문제, 경로 a/b/c/d/memo.txt 에 해당하는 파일 생성 후 a 디렉토리 제거
mkdir a : a 디렉터리 생성
ls : 생성 확인
cd a : a로 디렉터리 변경
mkdir b : b 디렉터리 생성
ls : 생성 확인
cd b : b로 디렉터리 변경
mkdir c : c 디렉터리 생성
ls : 생성 확인
cd c : c로 디렉터리 변경
mkdir d : d 디렉터리 생성
ls : 생성 확인
cd d : d로 디렉터리 변경
touch memo.txt : memo.txt 파일 생성
ls : 생성 확인
13
문제, cd를 사용하지 않고 경로 a/b/c/d/memo.txt 에 해당하는 파일 생성 후 a 디렉토리 제거
mkdir a : a 디렉터리 생성
ls : 생성 확인
mkdir a/b : b 디렉터리 생성
ls a : 생성 확인
mkdir a/b/c : c 디렉터리 생성
ls a/b : 생성 확인
mkdir a/b/c/d : d 디렉터리 생성
ls a/b/c : 생성 확인
touch /a/b/c/d/memo.txt : memo.txt 파일 생성
ls a/b/c/d : 생성 확인
14
mkdir -p 로 후손 디렉토리까지 한번에 만들기
mkdir에서 p옵션을 사용하면 경로에 포함된 모든 디렉터리를 한번에 생성해준다.
ex) mkdir -p a/b/c/d -> a,b,c,d 계층 적용해서 모두 만들어줌
15
rm -rf 로 비어있지 않은 디렉토리를 한번에 삭제
rmdir의 경우 디렉터리 안에 파일이 있으면 지울 수 없기 때문에 굳이 안쪽의 파일을 지운 후에 디렉터리를 지울 수 있는 번거로움이 있다.
rm은 파일 삭제 명령어 이지만 -r 옵션을 주면 디렉터리도 지울 수 있다. 추가적으로 -f 옵션을 주면 강제로 삭제해주기 때문에 무언가를 깔끔하게 날리고 싶을 땐 rm -rf를 사용한다. 단, 지운 후에는 복구가 힘드니 절대로 주의해서 사용해야 한다.
rm a -> a의 폴더를 내부 파일까지 포함해서 다 지워준다.
16. echo로 출력
참고자료 - 외부포스팅 - echo 이스케이프 문자 사용
옵션 e : 이스케이프 문자를 사용
echo -e "hello\nworld" -> \n이 줄바꿈 문자로 처리됨
옵션 n : 출력문 끝에 줄바꿈 문자를 자동으로 붙이지 않음
echo -n "hello" -> "hello" 뒤에 \n이 붙지 않음.(원래 기본값을 자동으로 붙게 되어 있음)
17. 표준출력, 표준입력, 표준에러
- 표준출력 -> 모니터
- 표준입력 -> 키보드
- 표준에러 -> 모니터
    - 표준에러는 표준출력과 따로 구분된다.
18. 표준입력을 오른꺽쇠 기호를 사용해서 파일로 리다이렉팅

리다이렉팅
표준 출력이 모니터인 것을 파일로 가게 함(파일이 없는 경우 파일이 만들어지고 있으면 있는 파일에 작성)
19.cat 으로 문서의 내용 출력
cat 파일명
ex) cat a.txt
cat 파일명1 파일명2 파일명3 - 파일 여러개 동시에 출력
20. 리디렉션의 1> , 2> 에서 숫자의 의미
1 : 표준 출력을 리디렉션 하겠다.
2 : 표준 에러를 리디렉션 하겠다.
조합해서 사용하는 법
cat a b c d (c 파일이 없다고 가정하면) 1> result.txt 2> error.txt
a,b,d의 출력 내용은 result.txt에 저장되고, c가 없어서 나는 에러 메시지는 error.txt에 저장됨

표준출력과 표준에러, 리디렉션
문제. echo 만으로 애국가 1절 문서 파일 song.txt 를 완성해주세요
동해물과 백두산이 마르고 닳도록
하느님이 보우하사 우리나라 만세

무궁화 삼천리 화려강산
대한사람 대한으로 길이 보전하세


끝

21. vim 에디터
vim 에디터 단축키
리눅스 뿐만 아니라 여러 플랫폼에서 개발자들이 가장 많이 사용하는 강력한 편집기 프로그램 중 하나.
22. vim 에디터로 파일 열기
vim 파일명
23. vim 에디터 종료하기
q! : 수정 사항을 저장하지 않고 종료.
wq : 수정 사항을 저장하고 종료
24. vim 필수 단축키1 - esc
명령모드로 진입. 명령모드에 관련된 단축키를 사용 가능
25. vim 필수 단축키2 - i
명령모드에서 i를 누르면 입력모드로 전환. 입력모드에서는 단축키가 비활성화 되고 타이핑한 내용이 문서에 적힘
26. vim 필수 단축키3 - h,j,k,l
각각 좌, 하, 상, 우로 커서를 움직일 수 있음

27. vim 필수 단축키4 - yy(y연타)
명령모드에서 커서가 위치한 줄을 한줄 복사
28. vim 필수 단축키5 - dd(d연타)
명령모드에서 커서가 위치한 줄을 한줄 삭제
29. vim 필수 단축키6 - p
명령모드에서 커서가 위치한 곳에 복사한 것을 붙여넣기
30. vim 필수 단축키7 - v
비주얼모드로 전환. 비주얼 모드는 커서를 이용해 드래그 할 수 있는 모드이다. ( 특정 영역을 선택할 때 쓰임 )
31. vim 필수 단축키8 - u
명령모드에서 이전 작업으로 되돌리기. (undo)
32. vim 필수 단축키9 - 컨트롤 + r
명령모드에서 다음 작업으로 되돌리기 (redo)
33. vim 필수 단축키10 - w, b
명령모드에서 커서가 단어 단위로 이동 (w는 ->, b는 <- 방향으로 커서가 이동함)

vim을 이용한 편집2 - redo, undo
34. less로 출력결과 스크롤링하기
사용법 : less 파일명
파일의 내용을 상하좌우키로 스크롤하면서 확인할 수 있다.
35. |를 이용해 결과를 입력으로 넘기기
사용법 : 명령1 | 명령2
명령1에 대한 결과를 명령2에 입력으로 처리
ex) ls -l | less -> 첫번째 명령인 파일 목록의 결과를 less의 입력으로 활용
36. grep을 이용한 필터링
사용법 grep "aa" 파일명 -> 파일에서 aa인 행만 찾아서 출력
ex) grep "동해" song.txt
|를 이용해 cat song.txt | grep "동해" 이렇게도 가능.

파이프와 grep을 이용한 필터링
37. 이동과 복사
이동 : mv
사용법 : mv 원본파일 목적지
mv a.txt bbb -> a.txt파일을 bbb폴더로 이동
mv a.txt b.txt -> mv는 파일명 변경용으로도 사용된다.
복사 : cp
cp a.txt bbb -> a.txt파일을 bbb폴더로 복사
cp a.txt b.txt -> a.txt파일을 b.txt라는 파일로 복사

문제
기존 입력 명령문 중에서 song과 vim 을 동시포함하는 라인만 출력
vim 에디터를 이용해
    
    애국가 1절부터 4절까지 작성해보세요.
    각 절마다 애국가 1절, 애국가 2절 이렇게 타이틀을 적어주세요.
    후렴은 복사붙여넣기로 넣어주세요.
    
    애국가 1절
    
    애국가 2절
    
    애국가 3절
    
    애국가 4절
    
38. 설치 링크

39. 가상 머신과 버추얼 박스
외부 포스팅 - 바이오스에서 VT-x 켜는법
외부 포스팅 - 윈도우기능에서 hyper-v 끄는법
40. 호스트키 설정
상단 메뉴에서 파일 - 환경설정 - 입력 - 가상머신탭 - 호스트키 조합 클릭 - Ctrl + Alt + Shift 동시에 눌러서 세팅 - 확인


41. 가상 머신 만들기
메뉴에서 머신 - 새로만들기 - 이름 정하고 - 종류는 Linux - 버전은 Other Linux - 메모리 크기 4096(상황에 맞게 선택) - 지금 새 가상 하드 디스크 만들기 - VDI - 동적할당 - 30GB(상황에 맞게 선택
42. 리눅스 설치 준비
생성된 가상 머신 우클릭 - 설정 - 저장소 - 비어있음 - 속성의 광학드라이브에서 시디롬 모양 아이콘 클릭 - 가상 광학 디스크 선택/만들기 - 다운로드 받은 centos7.iso 선택 - 확인 - 머신 선택 후 시작 버튼
43. 리눅스 설치 진행
키보드 한국어 - 파티션 자동 설정 - 소프웨어 설치 웹서버 설치 - 설치 진행 - root 패스워드는 adminuser
44. 최초 상태 스냅샷 찍기
설치 후 부팅이 완료되면, 또는 머신을 시작해서 기동하면 로그인 화면이 나옴 - root로 로그인 - 머신 종료 - virtual box 프로그램에서 머신이름 오른쪽 짝대기 아이콘 선택 - 스냅샷 - 찍기 - 이름 기입 후 확인

45. 리눅스 망친 후 복원하기
가상 머신 기동 후 root로 로그인 - rm -rf .b* 명령어로 파일 삭제 - 망함 - 머신 종료 - virtual box 프로그램에서 머신이름 오른쪽 짝대기 아이콘 선택 - 아까 만들어둔 스냅샷 선택후 상단에 복원 버튼 선택 - 망한 버전은 스냅샷 찍기 체크박스 해제 - 확인

스냅샷으로 초기 모습으로 복구하기
46. 랜카드 활성화
/etc/sysconfig/network-scripts/ifcfg-enp0s3 파일 vim으로 열어 ONBOOT=NO를 ONBOOT=yes로 수정
47. 아이피 확인
리부팅 후 ip addr로 ip 확인

네트워크 개념 및 네트워크 인터페이스 카드 on 설정하기
48. 도메인과 ip
도메인 : ip는 숫자의 조합으로 이루어져 있기 때문에 다루기 불편하다. 때문에 전화번호 연락처처럼 ip를 사람이 이해하기 쉬운 문자로 매핑해 놓은 것이 도메인.
49. Virtual Box의 네트워크 구조
virtual box는 기본적으로 NAT 방식으로 네트워크를 구성. 라우터(여기서 라우터는 HOST PC)가 발급한 사설 IP를 이용한다. 사설 아이피는 외부에서의 접근이 불가능하다.
50. 운영체제 안팎의 프로그램들이 소통하는 통로, 포트
운영체제 안에는 여러개의 프로그램들이 구동되어진다. 이들 중 네트워크를 사용하는 프로그램도 다수일 것인데, IP만으로는 이 프로그램들을 구별하기 불가능하다. 따라서 동일 IP안에서 여러 소프트웨어를 구분하기 위한 용도로 사용되는 번호가 포트 번호이다.

51. Putty - 리눅스 원격제어 클라이언트 프로그램 설치
putty download
52. 리눅스를 원격으로 다루는 이유
보통 리눅스는 서버로 사용.
컴퓨터가 24시간 풀로 돌아가야함
냉방이 잘 되어야 함
서버가 크면 부지를 많이 차지함
위와 같은 이유로 IDC라는 서버 센터를 따로 둠
보통 땅값이 싸거나 한곳에 모아두어야 하므로 오지같은 곳에 모아 놓음(심지어 ms인가 구글은 바다 속에 놓을 생각을 하고 있음)
서버를 점검하기 위해 항상 IDC 센터에 가는 것은 굉장히 불편하고 비생산적인 일. 그러므로 원격으로 하는 것임.
53. 네트워크 프로그램에 접근하기 위한 최소정보는 IP와 Port이다
IP는 컴퓨터까지만 간다.
컴퓨터에는 여러 프로그램이 설치되어있다
프로그램 중에는 네트워크를 사용하는 프로그램이 여러개 있다.
여러 네트워크 프로그램을 식별하기 위한 식별번호가 포트이다.
유명한 프로그램은 포트를 다 잡고 있다.
ssh -> 22
ftp -> 21
http -> 80
ssl -> 443
네트워크를 사용하는 서비스를 사용 및 개발하기 위해서는 반드시 알아야 하는 개념.
54. 리눅스 원격 제어 서버 프로그램 sshd
centos에 내장되어 있는 프로그램
외부에서 원격으로 리눅스에 접근할 수 있게 해주는 프로그램 또는 프로토콜
이게 있어서 원격 접속이 가능하다.
리눅스에서 이 프로그램은 포트번호 22를 사용하고 있다.
원격접속 클라이언트 프로그램(ex: putty)와 호응한다.

55. 포트포워딩
NAT 방식은 라우터에 의해 사설IP가 만들어지고 외부에서는 직접적으로 사설 IP를 접근할 수 없다.
외부에서 사설 IP를 접근하려면 라우터에게 부탁해야한다.
라우터에게 부탁하려면 라우터의 IP를 알아야 한다.
라우터가 관리하는 사설 IP가 여러개 이므로 라우터의 IP로 요청을 보낼 때 포트번호를 같이 보낸다.
라우터는 포트번호를 보고 사설 IP를 선택해서 접근하게 해준다.
단, 라우터에게 어떤 포트번호로 들어왔을 때 어떤 IP를 선택해야하는지에 대한 규칙을 정해놔야 한다.
이러한 작업을 포트포워딩이라고 한다.
56. 포트 포워딩에서 용어가 의미하는바
규칙 : 어떤 포트에 어떤 대상을 연결할지 정하는 것
규칙 이름 : 여러 규칙을 식별하기 위함
프로토콜 : 네트워크 접속 방식
호스트IP : 규칙을 사용할 수 있는 IP(0.0.0.0으로 하면 제한 없음)
호스트포트 : 규칙이 적용될 외부 포트
게스트IP : 접근하고자 하는 대상 사설 IP
게스트포트 : 게스트IP에서 접근하고자 하는 서비스의 포트

57. shutdown, reboot는 서버를 끄거나 재기동 시킨다.
shutdown : 서버 종료
reboot : 서버 재기동
위 명령어는 원격 접속 환경임을 감안하여 유의해서 사용해야 한다.
컴퓨터가 꺼지면 당연히 원격 접속이 안될 것이며, 재기동시에도 랜카드 자동 on 설정이 안되어 있으면 원격 접속이 안된다. 그럼 컴퓨터를 켜기 위해 오지로 가야한다.
58. LAN 카드를 부팅될 때 자동으로 ON 하기 위해서는 네트워크 설정 파일을 수정한다.
이때, 파일을 찾기가 어려우면 mlocate 패키지를 설치하여 파일을 좀 더 쉽게 찾을 수 있다.
59. 리눅스에서 패키지(프로그램)를 설치할 때는 yum이라는 패키지관리자를 사용한다.
yum은 패키지 매니저이다.
패키지 설치또는 업데이트, 제거등을 담당한다.
원격 저장소에서 다운로드 받는 방식이기 때문에 네트워크가 활성화 되어 있어야 한다.
기본적으로 설치 명령어는 yum install 패키지 이름이다.
yum을 이용해 mlocate 패키지를 설치하는 명령
yum intall mlocate
60. mlocate를 이용해 원하는 파일 찾기
updatedb
mlocate 설치후 한번 실행해줘야 하는 명령어. mlocate 프로그램에게 시스템의 정보를 알려준다고 생각하면 된다.
locate 찾고자하는 단어
locate enp0s3 명령을 치면 파일명에 enp0s3에 포함된 파일의 목록이 풀경로로 검색된다.
61. systemctl을 이용해 서비스를 재시작하기
대부분의 서비스는 설정파일을 가지고 있는데 이 설정 파일은 서비스가 실행될 때 메모리에 같이 올라간다.
만일 실행중인 서비스의 설정파일을 수정하면 새로 수정한 설정파일을 다시 메모리에 올려야 한다.
방법1. 서버 재기동.
서버가 재기동 되면서 서비스가 자동재시작 되며 새로운 설정파일을 들고 간다.
방법2. 방법1은 너무 부담스럽다. systemctl을 이용해 특정 서비스만 재시작할 수 있다.
systemctl restart network -> 네트워크 서비스 재시작
62. 리눅스에서는 root 계정의 사용을 최대한 자제한다.
보안상의 이유, 시스템 보호 차원에서 root 사용을 자제하고 새로운 계정을 만들어 사용한다.
새로운 계정을 만드는 명령
useradd 유저명 : 유저 생성
passwd 유저명 : 유저 비밀번호 설정
su : root 유저로 전환(root 비밀번호 입력해야 함)
su user1: user1로 전환(user1 비밀번호 입력해야 함)
whoami : 난 누구? (현재 로그인한 유저명 보여줌)
pwd : 여긴 어디? (현재 경로 보여줌)

63. 관리자의 권한을 잠시 빌리는 명령어 sudo
잠깐 관리자의 권한이 필요한 작업을 수행할 때마다 관리자로 로그인하고 다시 로그아웃 하는 것은 불편한 일이다.
sudo 명령어를 이용하면 명령어 단위로 관리자의 권한을 빌릴 수 있다.
예시 ) sudo useradd user1
단, sudo 명령어는 아무나 쓸수 있는게 아니고 /ect/sudoers 파일에 등록되어 있거나, wheel이라는 그룹에 소속된 유저만이 사용 가능하다.
wheel 그룹은 sudo 명령의 사용이 허가된 그룹이다.
64. 파일 상세정보의 의미와 권한 정보
ls -l 로 보는 파일 상세정보는 각각 다음과 같다.
-r--r-----. 1    root    root        4328     24/08/2022       /etc/sudoers
권한         링크  소유자  소유그룹 파일크기   날짜            파일명`

권한의 가장 앞쪽은 파일 유형이다.
l : 링크
d : 디렉터리
- : 파일
그 뒤의 세개는 소유자의 권한이다. 순서대로 r,w,x
r : 읽기 권한
w : 쓰기 권한
x : 실행 권한
- : 권한 없음
그 뒤의 세개는 그룹의 권한이고, 그 다음 세개는 그외 다른 유저의 권한이다. rwx의 의미는 같다.
65. 사용자를 그룹에 추가하기
사용자 생성과 함게 그룹 부여
useradd -G 그룹명 사용자명
G는 그룹을 추가하겠다는 옵션
이미 생성된 사용자에게 그룹 부여
usermod -aG 그룹명 사용자명
aG는 그룹을 추가하겠다는 의미
66. id 명령어로 유저의 그룹 정보 보기
id user1
user1의 유저번호 및 그룹 정보를 볼 수 있음
유저의 그룹 정보를 변경한 후 확인할 때 사용할 수 있음

유저 추가 및 sudo 권한 부여하는 법
67. 사용자 계정 삭제하기
userdel 유저명
이때 유저만 삭제되고 유저가 사용하던 home 디렉터리는 삭제되지 않는다.
만일 home 디렉터리도 같이 삭제하고 싶으면 -r 옵션을 붙여주면 된다.
예시) userdel -r user
68. 파일의 소유자, 소유그룹 변경하기
리눅스에서 모든 파일은 소유자와 소유 그룹이 있다. 파일에 대한 권한을 체크하기 위함이다. 필요하다면 파일의 소유자를 변경해야 하는데 아래와 같이 명령어를 사용한다.
chown 소유자:소유그룹 대상파일
예시) chown user1:user1 /work

69. 파일의 권한 변경
리눅스에서 각 파일은 소유자, 소유그룹, 그외유저 세 대상에 대한 권한을 각기 다르게 부여하고 있다. 필요하다면 파일의 권한을 편집하여 파일의 사용을 제한할 수 있다.
이진수로 표현하는 방법

 
 세자리 2진수를 이용해 권한을 마스킹할 수 있다.

 이진수의 각 자리수는 10진수로 아래와 같은 의미를 갖는다.
 첫번째 자리 : 2^0 = 1
 두번째 자리 : 2^1 = 2
 세번째 자리 : 2^2 = 4

 예시)
 1 1 1
 4 2 1 = 7

 1 0 1  
 4 0 1 = 5

 0 0 1 
 0 0 1 = 1

 1 1 0
 4 2 0 = 6


 이진수에서 1은 true, 0은 false를 의미. 이는 권한의 유무로 판별된다.
 1 - true : 권한 있음
 0 - false : 권한 없음

 예시)
 rwx => 1 1 1 => 7
 r-x => 1 0 1 => 5
 --x => 0 0 1 => 1 

 세 그룹에 대한 모든 권한을 적으면 아래와 같다.
 rwxrwxrwx => 777
 rwx-wxr-x => 735
 rwxrwxr-x => 775
 
 권한 변경 예시 -> 소유자 전부, 소유그룹 전부, 그외 읽기와 실행만 권한 부여하고 싶을 때.
  - chmod 775 /work
 
새로 나온 방식
 u 소유자
 g 그룹
 o 그외

 r  읽기
 w 쓰기
 x 실행

 + 추가
 - 제외

 예시)
 g + w : 그룹 권한에 쓰기 권한을 추가
 g - r : 그룹 권한에 읽기 권한을 제거
 u + rx : 소유자 권한에 읽기, 실행 권한을 추가

그룹 부여 및 파일 권한 변경
실습문제
root 접속
로그인한 계정 확인
현재 경로 위치 확인
user1 생성
user1의 비밀번호 부여
유저가 잘 추가되었는지 유저 파일 확인
user1에 sudo 권한 부여
sudo 붙여서 계정확인
sudo 붙여서 현재 계정 그룹 정보 확인
developer라는 그룹 생성
user1을 developer 그룹에 추가
user2를 생성함과 동시에 developer 그룹에 추가
user1을 이용해 /에 work 디렉터리 생성
work 디렉터리 소유자와 소유그룹을 각각 user1 / developer
work의 모든 파일에 소유자 rwx, 그룹 rw, 그외 r 권한을 부여
이진수 방식
최신 방식
work에 user1과 user2로 각각 a.txt, b.txt 파일 생성하기
70. 고정 IP 등록
centos7 네트워크 공식문서

1단계 : ip addr 명령을 통해서 IP와 서브넷마스크 확인

서브넷마스크
~~/24 => 255.255.255.0
~~/8 => 255.0.0.0
2단계 : ip route 명령을 통해서 게이트웨이 IP 확인

3단계 : 설정파일 수정, sudo vim /etc/sysconfig/network-scripts/ifcfg-enp0s3 (안되면 sudo 빼고)

BOOTPROTO=static # dhcp 에서 static 으로 수정
IPADDR=10.0.2.16 # 제한적으로 변경가능, 파일의 최하단 부분에 추가
GATEWAY=10.0.2.2 # 정해짐, 파일의 최하단 부분에 추가
NETMASK=255.255.255.0 # 정해짐, 파일의 최하단 부분에 추가
DNS1=8.8.8.8 # 제한적으로 변경가능, 파일의 최하단 부분에 추가
DNS2=8.8.4.4 # 제한적으로 변경가능, 파일의 최하단 부분에 추가
ESC키, :wq! 엔터키
4단계 : 네트워크 설정 변경 후 적용

sudo systemctl restart network 명령 수행 (안되면 sudo 빼고)
5단계 :

포트포워딩(아래 정보처럼 변경, 게스트 IP만 변경하면 됨)

이름 : SSHD
프로토콜 : TCP
호스트 IP : 0.0.0.0
호스트 포트 : 2222
게스트 IP : 10.0.2.16
게스트 포트 : 22

71. yum 을 이용한 응프로그램 및 패키지 다루기
응용프로그램 다루기 - 패키지 설치 및 업그레이드
다양한 배포판에 맞는 소스코드를 직접 받아 컴파일해야함
소스코드를 받아서 컴파일하는 것은 비개발자가 하기엔 어려움
패키지매니저
해당 배포판에 맞게 환경 설정되어 빌드된 실행파일을 설치 및 관리
rpm
패키지를 하나하나 다운로드 받아야 함
버전관리, 의존성 문제등이 있음
yum
RPM의 의존성을 해결한 버전
사용이 쉬우니 이걸로 하자
72. yum 관련 명령어
yum은 확장 프로그램(Plug-in)을 설치하여 수많은 명령어를 사용할 수 있다
install                 패키지 설치( rpm -i)

update               업데이트 ( rpm -U)

check-update      업데이트 가능 여부만 확인

remove              삭제( rpm -e)(설정 파일을 삭제하지는 않음)

list

list all

설치 되어 있거나 설치 가능한 패키지 목록을 확인
list installed ( rpm -qa)

설치 되어 있는 패키지 목록을 출력
list check-update

업데이트된 목록 출력
info

패키지 정보 확인( rpm -qi)
- yum search[문자열]
- 패키지 명이나 패키지 정보에서 문자열과 일치하는 패키지를 출력한다.
- ex) yum search korean
- ex) yum search vim

73. yum repository
cd /etc/yum.repos.d에 가면 repository에 대한 파일이 존재.
추후 이곳에 레파지토리를 추가해서 패키지를 설치 할 수 있음
기본 레파지토리는 패키지수가 적기 때문에 풍부한 패키지를 위해 epel-release를 설치
sudo yum install epel-release
각 레파지토리는 시간이 지나면서 계속 목록이 업데이트 되기 때문에 최신 목록을 내 시스템으로 받아와야 한다. 이를 update라고 하며 아래와 같은 명령어로 수행한다.
yum update
74. 웹서버 nginx 설치해보기
nginx를 설치하려고 하면 최신 버전이 기존의 레파지토리에 업로드 되어 있지 않은 경우가 대부분이다.(보수적 관리에 의하여)
때문에 어떤 패키지를 최신버전으로 받으려면 해당 패키지를 제작한 제작사의 레파지토리로 접근해야 한다.
이 레파지토리 정보는 제작사에서 제공한다.
nginx 공식 문서의 repo 정보
제작사에서 제공하는 레파지토리 정보를 이용해 /ect/yum.repos.d/ 폴더에 레파지토리 파일을 생성해야한다.
레파지토리 이름은 자유지만 보통 해당 패키지의 이름으로 한다.

75. systemctl - 서비스 또는 데몬 관리 명령어
특정 프로세스가 백그라운드에서 계속 실행될 수 있고 이를 보통 데몬 또는 서비스라고 부른다.
이 서비스를 켜고 끄거나 상태를 보고 관리하는 명령어가 systemctl이다
nginx는 설치후 서비스로 등록되기 때문에 systemctl로 관리가 가능하다.
sudo systemctl start nginx : nginx 기동
sudo systemctl stop nginx : nginx 종료
sudo systemctl status nginx : nginx 상태 보기
sudo systemctl restart nginx : nginx 재시작(보통 서버가 뻗거나, 설정을 바꾸고 나면 사용)

76. 데몬(서비스) 등록파일 작성하기
데몬을 systemctl에 의해 관리받게 하려면 데몬등록을 먼저 해야한다. 데몬을 등록하는 위치는 아래 둘중 하나에 등록한다.
/etc/systemd/system
/usr/lib/systemd/system
데몬을 등록하기 위해서는 데몬 정보를 입력해야 하는데 아래와 같이 입력한다.
[Unit] 
Description=데몬 설명  

[Service] 
ExecStart=데몬이 시작할 때 실행되는 쉘

[Install]
WantedBy=데몬이 실행되어야 하는 구간. (ex: 부팅 후, 네트워크 활성 후 등..)
위 설정값 외에도 많은 설정들이 존재한다. 필요하면 검색을 통해 해결.
아래는 공식 홈페이지 상에서 각 섹션의 의미와 옵션값을 설명해 놓은 문선이다.
unit 파일 구조 공식문서
77. 리눅스 쉘 작성하기
쉘 명령어를 파일로 저장하여 순차적으로 실행할 수 있다.
쉘 파일을 작성할 때는 최상단에 #!bin/bash를 기입해야 한다. (해당 쉘을 실행할 쉘의 종류를 정해주는 것)
아래와 같이 특정 파일에 로그를 남겨주는 쉘을 작성해본다.
echo "test log" >> /home/user1/mylog/mylog.log
아래 명령어를 통해 실행 파일을 만든다.
vim /home/user1/mybin/test.sh
파일 내용을 아래와 같이 작성한다.
    #!bin/bash
    while true
    do
        echo "test log" >> /home/user1/mylog/mylog.log # 로그 생성
        sleep 5 # 5초동안 대기
    done
해당 쉘을 실행해 본다. 이때 .sh은 실행할 때 꼭 풀경로로 적어준다.
/home/user1/mybin/test.sh
혹시라도 실행 권한이 없다면 chmod를 이용해 실행권한을 부여한다.
sudo chmod 764 /home/user1/mybin/test.sh
/home/user1/mylog/mylog.log 파일에 로그가 잘 쌓였는지 확인한다.
cat /home/user1/mylog/mylog.log
78. 서비스(데몬) Unit파일 작성
서비스(데몬) Unit파일을 작성해 systemctl의 관리를 받게 한다.
vim /usr/lib/systemd/system/my-logger.service
아래와 같이 작성한다.
[Unit] 
Description=My Logger

[Service] 
ExecStart=/home/user1/mybin/test.sh

[Install]
WantedBy=multi-user.target

나만의 서비스(데몬) 만들기1
나만의 서비스(데몬) 만들기2
79. 프로세스
프로세스 간단 개념
자원을 할당 받고 PID를 부여 받은 프로그램
프로세스 의존성
한 프로세스가 다른 프로세스로부터 생성되는 것
포로세스 인스턴스
동일한 프로그램을 여러번 실행시키면 하나의 프로그램을 여러개로 복제하여 실행. 복제된 프로그램을 인스턴스라고함
80. 네트워크 상태 확인
netstat -nltp -> 네트워크 상태를 볼 수 있음

n : 주소나 포트 형식을 숫자로 표현한다.
l : LISTEN 하고 있는 포트를 보여 준다. LISTEN은 연결 수립 요청이 올 때까지 대기하는 것.
p : 해당 프로세스를 사용하고 있는 프로그램 이름을 보여 준다.
t : TCP로 연결된 포트를 보여준다.
일반적으로 less나 grep을 이용해 원하는 것을 찾는다.

예시) netstat -ltp | grep ssh
81. 네트워크 서비스는 클라이언트와 서버의 개념이 존재한다.
대표적인 클라이언트 서버관계
ssh
클라이언트 : putty, ssh
서버 : sshd
http
클라이언트 : 크롬, 사파리, 엣지
서버 : nginx, apache
ftp
클라이언트 : 파일질라
서버 : ftpd
82. HOST OS(윈도우)의 브라우저를 이용해 GUEST OS(Linux)의 nginx에 접근하기
만일 HOST OS(윈도우)의 IP가 192.168.1.2 이고, GUEST OS(Linux)의 IP가 10.0.2.16이라고 할때
윈도우의 브라우저는 자신의 네트워크 인터페이스를 사용(192.168.1.2)
윈도우 입장에서 GUEST OS(Linux)의 IP는 실존하지 않음. 윈도우 입장에서는 Virtual Box라는 프로그램만 보임
따라서 윈도우로 GUEST OS에 네트워크 접근하려면 Virtual Box에게 신호를 보내야함.
Virtual Box는 HOST OS(윈도우)에 설치 되어 있음.
결국 자기 자신에게 네트워크 신호 보내야함.
특정 포트를 virtual box로 보내 virtual box가 자신의 가상머신으로 보내게 해야함.
이를 위해 virtual box의 가상머신 설정에서 특정 포트(여기선 8088로 함)에 대한 포트포워딩 설정을 하는 것.
크롬 브라우저를 켜고 주소창에 127.0.0.1:8088 입력
HOST OS(윈도우)에 8088포트로 네트워크가 들어오면 가상머신으로 돌림
가상머신은 포트포워딩에 설정 된 대로 127.0.0.1:8088을 10.0.2.16:80으로 연결해줌
만일 그래도 안되면 리눅스의 방화벽에 막혀있을 확률이 높음.
systemctl status firewalld 로 방화벽 상태를 확인하고 만일 active(running) 상태이면 sudo systemctl stop firewalld로 서비스 종료
브라우저에 127.0.0.1:8088에 치고 들어갔을 때 nginx 페이지가 뜨면 성공.
실패했을 때 따져봐야 하는 것
내부적 요인
랜카드 on/off 유무
sudo ifup enp0s3
network 서비스의 실행 상태
sudo systemctl status network
포트포워딩 설정
가상 머신의 포트포워딩 설정 확인
방화벽 활성 여부
sudo systemctl status firewalld
외부적 요인
외부 네트워크의 결함 상태
잘못된 접속 정보(IP, Port, Protocol 등)

프로세스와 네트워크 상태 확인방법 및 nginx를 이용해 웹서버 접속해보기
83. wget을 이용해 index.html 받아보기
sudo yum install wget을 이용해 wget 설치
wget은 리눅스용 웹브라우저라고 생각하면 된다.
설치 완료 후 wget 10.0.2.16을 입력하면 자동으로 10.0.2.16의 80포트로 http요청을 보낸다
10.0.2.16의 80포트에는 nginx가 설치되어 있으므로 nginx가 index.html이라는 파일을 보내준다.
실제로 ls를 통해 확인해보면 index.html파일이 생성된 것을 확인할 수 있다.
84. nginx가 바라보는 root 디렉터리 찾기
locate를 이용해 nginx가 관리하는 index.html가 어디에 있는지 확인
locate index.html | grep nginx
만약 검색 결과에 안나오면 sudo updatedb 입력하여 업데이트
/usr/share/nginx/html/index.html로 검색될 것임
/usr/share/nginx/html/가 root 디렉터리
85. index.html을 수정해서 실제로 타겟이 맞는지 확인
index.html 파일의 내용을 수정하고 브라우저로 수정된 내용이 나오는지 확인
sudo vim /usr/share/nginx/html/index.html
파일 내용을 기존의 내용 다 지우고(d 연타) hello로 수정
브라우저를 새로고침 하여 hello가 뜨는지 확인
86. nginx 설정정보를 바꿔 내가 root 디렉터리를 내가 원하는 디렉터리로 바꾸기
nginx 설정 파일 찾기
방법1. 파일명을 유추해서 찾기. 아래 명령어 사용
locate nginx | grep conf
방법2. 구글링 및 공식문서
/etc/nginx/nginx.conf 인 것을 확인
/etc/nginx/nginx.conf는 메인 설정 파일이며, 내부에서 서브 설정 파일을 include하고 있다.
/etc/nginx/conf.d/default.conf 가 서브 설정 파일이며 여기에 상세 설정을 할 수 있다.
여기서는 default.conf에 직접 작성하지 않고 또다른 서브 설정 파일 vhost.conf를 새로 생성해서 진행한다. 아래와 같이 입력.
sudo vim /etc/nginx/conf.d/vhost.conf
편집기 열리면 아래와 같이 파일 내용 작성
server {
        listen 8081;
        server_name project1;

        location / {
                root /my_projects/project1/public;
                index index.html;
        }
}

server {
        listen 8082;
        server_name project2;

        location / {
                root /my_projects/project2/public;
                index index.html;
        }
}

작성이 완료되면 sudo systemctl restart nginx로 재시작
87. selinux 비활성화 하기
selinux는 리눅스에 기본적으로 설정되어 있는 보안 강화 정책.
기본적으로 보안을 강화시켜주긴 하지만 selinux를 지키면서 작업하려면 공수가 많이 들기 때문에 초급과정에 적합하지 않음
여기서는 비활성화 하여 진행하도록 함.
sudo vim /etc/selinux/config
파일 내용을 아래와 같이 수정
# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#     enforcing - SELinux security policy is enforced.
#     permissive - SELinux prints warnings instead of enforcing.
#     disabled - No SELinux policy is loaded.
# SELINUX=enforcing
SELINUX=disabled
# SELINUXTYPE= can take one of three values:
#     targeted - Targeted processes are protected,
#     minimum - Modification of targeted policy. Only selected processes are protected.
#     mls - Multi Level Security protection.
SELINUXTYPE=targeted
nginx 설정 변경을 통해 가상호스팅하기
selinux 비활성화 하고 nginx에 접속해보기
88. 파일질라 설치
[다운로드 링크](https://filezilla.softonic.kr/download
파일질라 실행하고 나면
파일 > 사이트 관리자 > 새 사이트 > 사이트 이름 정하고 >
프로토콜 : SFTP
호스트 : 127.0.0.1
포트 : 9999
로그온 유형 : 비밀번호 묻기
내용 작성이 완료되면 연결 버튼 누른 후 비밀번호 입력
로컬의 파일을 원격 서버의 디렉터리로 드래그 하여 복사 할 수 있음.
ftp와 sftp의 차이
ftp : 파일 전송 프로토콜. 두 컴퓨터간의 네트워크 파일 전송에 관한 내용
sftp : ssh 파일 전송 프로토콜. 두 컴퓨터 간의 원격 접속을 바탕으로 그 위에 파일 전송 내용을 추가함.
sftp는 ssh프로토콜상에서 작동하기 때문에 기본적으로 ssh의 확장이라고 볼 수 있다. ssh는 명령 권한이 있기 때문에 파일 전송이라는 세부 목적에만 집중하려면 ftp를 사용하는 것이 좋다. 단, sftp는 보안상 유리하므로 중요한 파일같은 경우는 sftp를 사용하는 것을 권장
89. DB 서버 구축
maridb repository

mariadb repo 파일 작성

sudo vim /etc/yum.repos.d/MariaDB.repo
   [mariadb]
   name = MariaDB
   baseurl = http://yum.mariadb.org/10.6/centos7-amd64
   gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
   gpgcheck=1
보안 관련 설정

sudo /usr/bin/mariadb-secure-installation
root 비밀번호만 잘 설정하고 나머진 y로
인코딩 설정

sudo vim /etc/my.cnf.d/server.cnf
[mysqld]
character-set-server=utf8mb4
collation-server=utf8mb4_unicode_ci
skip-character-set-client-handshake
sudo vim /etc/my.cnf.d/mysql-clients.cnf
[mysql]
default-character-set = utf8mb4

...

[mysqldump]
default-character-set = utf8mb4
90. 유저 생성하고 권한 부여
mysql -u root -p
GRANT ALL PRIVILEGES ON *.* TO korea@% IDENTIFIED BY 'korea1234';
원격 db접속 클라이언트 sqlyog 설치
다운로드 링크
91. pure-ftpd 설치 및 세팅
설치

sudo yum install pure-ftpd -y
세팅

sudo vim /etc/pure-ftpd/pure-ftpd.conf
MySQLConfigFile /etc/pure-ftpd/pureftpd-mysql.conf 에서 앞에 # 주석 풀기
sudo vim /etc/pure-ftpd/pureftpd-mysql.conf
MYSQLSocket /var/lib/mysql/mysql.sock
mysql 소켓 파일 확인은 mysql이 돌아가고 있는 상태에서 sudo updatedb 명령 후 sudo locate mysql | fgrep sock 로 경로를 찾을 수 있다.
MYSQLUser pureftpd # pure-ftpd 에서 mysql 에 접속할 때 사용할 ID
MYSQLPassword korea1234 # pure-ftpd 에서 mysql 에 접속할 때 사용할 PW
MYSQLDatabase pureftpd # ftp 사용자 정보 DB
MYSQLCrypt cleartext # 비번은 평문으로 저장 하겠다.
MariaDB에 pureftpd 계정 생성

아래의 권한부여 SQL은 mysql root 계정으로 실행(mysql -u root -p)
기존의 sbsst 계정과 다르게 이번에 추가되는 pureftpd 계정은 pureftpd DB에 대한 권한만 가진다.
이렇게 pureftpd 계정을 꼭 추가해야하는 건 아니지만, 추가하면 보안이 강화된다.
GRANT ALL PRIVILEGES ON pureftpd.* TO pureftpd@localhost IDENTIFIED BY 'korea1234';
92. 데이터 생성 및 추가
```
DROP DATABASE IF EXISTS pureftpd;

CREATE DATABASE pureftpd;

USE pureftpd;

CREATE TABLE users (
  uidx int(10) unsigned NOT NULL AUTO_INCREMENT,
  `user` varchar(100) NOT NULL,
  `password` varchar(100) NOT NULL,
  `gid` int(10) unsigned NOT NULL,
  `uid` int(10) unsigned NOT NULL,
  `occurDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `status` tinyint(1) unsigned NOT NULL DEFAULT '1',
  `ipaccess` varchar(15) NOT NULL,
  `comment` varchar(100) NOT NULL,
  `ulBandWidth` smallint(5) unsigned NOT NULL,
  `dlBandWidth` smallint(5) unsigned NOT NULL,
  `quotaSize` smallint(5) unsigned NOT NULL,
  `quotaFiles` int(10) unsigned NOT NULL,
  `dir` varchar(100) NOT NULL,
  PRIMARY KEY (`uidx`)
);

insert  into `users`(`uidx`,`user`,`password`,`gid`,`uid`,`occurDate`,`status`,`ipaccess`,`comment`,`ulBandWidth`,`dlBandWidth`,`quotaSize`,`quotaFiles`,`dir`) values 
(1,'project1','korea1234',1000,1000,NOW(),1,'*','',0,0,0,0,'/my_projects/project1'),
(2,'project2','korea1234',1000,1000,NOW(),1,'*','',0,0,0,0,'/my_projects/project2'),
(3,'project3','korea1234',1000,1000,NOW(),1,'*','',0,0,0,0,'/my_projects/project3');
```
93. 클라이언트 설치하고 접속해보기
리눅스 ftp 클라이언트 설치
sudo yum install ftp
ftp 접속
ftp 127.0.0.1
user : project1
pass : korea1234

파일 서버 ftp와 DB 서버 mariaDB 설치 및 구축1
파일 서버 ftp와 DB 서버 mariaDB 설치 및 구축2
94. 파일질라를 이용해 파일서버 접근하기
파일질라 프로그램에서 파일 -> 사이트 관리자 -> 새 사이트 -> 이름 ftp
일반탭에서 다음과 같이 설정
프로토콜 : FTP
호스트 : 192.168.56.1 ( virtual box only network ip)
포트 : 21
로그온 유형 : 비밀번호 묻기
사용자 : project1
전송 설정 탭에서 다음과 같이 설저
전송 모드 : 능동형 체크
연결 누르고 비밀번호 입력후 접속
95. ftp를 passive로 서비스하기
파일질라 프로그램에서 -> 사이트 관리자 -> ftp 선택
전송 설정 탭에서 다음과 같이 설정
전송 모드 : 수동형 체크
연결 누르고 비밀번호 입력후 접속
접속은 잘 되지만 파일 전송이 되지 않음.
passive 방식 ftp 는 파일 전송 스트림에 따로 포트를 부여하기 때문에 포트포워딩이 안되면 파일 전송이 안됨.
passive 방식의 ftp는 포트를 굉장히 많이 사용하기 때문에 일일이 포트포워딩하는데 한계가 있음
따라서 네트워크 방식을 포트포워딩이 필요없는 브릿지 방식으로 변경
96. 네트워크를 브릿지 방식으로 변경
리눅스 종료 -> 버추얼박스에서 내 가상머신 우클릭 -> 설정 -> 네트워크 -> 어댑터1 -> 다음에 연결됨에서 NAT를 어댑터에 브릿지로 변경.
어댑터에 브릿지는 호스트 OS처럼 게스트 OS도 동등한 어댑터로서 IP를 부여받는 방식을 의미함.
네트워크 방식이 바뀌었으므로 리눅스의 네트워크 재설정
sudo vim /etc/sysconfig/network-scripts/ifcfg-enp0s3
아래와 같이 IPADDR과 GATEWAY를 수정해준다.
TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
BOOTPROTO=static
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
NAME=enp0s3
UUID=1a46c1f6-7a94-4d83-b232-13d245759510
DEVICE=enp0s3
ONBOOT=yes
IPADDR=192.168.1.111
NETMASK=255.255.255.0
GATEWAY=192.168.1.1
DNS1=8.8.8.8
DNS2=8.8.4.4

설정 파일 수정 후
sudo systemctl restart network
ip addr로 ip 확인 후 putty로 포트포워딩이 아닌 실제 가상머신의 ip로 접속하기.
혹시 pure-ftpd가 꺼져 있을 수 있으므로 아래 명령어로 활성화한다.
sudo systemctl start pure-ftpd
sudo systemctl enable pure-ftpd
이후 파일질라에서 수동형으로 다시 접속해보기
96. 에디트 플러스 설치하고 편하게 문서 작성하기
에디트플러스 다운로드
도구 -> 기본설정 -> 파일

새파일 형식 : Unix/Mac
기본 인코딩 : UTF-8
백업옵션 버튼 눌러서 들어간 후
아래 체크 박스 모두 체크
백업 디렉터리는 C:\editplus\remote_bakups 로 설정
파일 -> FTP 설정 -> 오른쪽 추가 버튼 클릭

설명 : centos7
FTP 서버 : 192.168.1.111(본인의 가상머신 IP를 적어야합니다.)
Username : user1 (sftp인 경우), project1 (ftp인 경우)
Password : 각 비밀번호입력
디렉터리 : 리눅스상에서 파일이 저장되길 바라는 위치
좌측 상단 디렉토리탭에서 [C:]Windows를 [ftp00] centos7로 변경

해당 폴더에서 작업하면 원격서버에 바로 적용됨
실습 시나리오
개발자1, 2, 3 이 웹서비스를 하고 싶어한다.
- 각 개발자가 제공하고자 하는 파일은 index.html이다
- index.html 의 파일내용은 각각 개발자1, 2, 3이다.
- 개발자1에게 site1이라는 폴더와 8081포트를 부여
- 개발자2에게 site2이라는 폴더와 8082포트를 부여
- 개발자3에게 site3이라는 폴더와 8083포트를 부여
- 웹브라우저에서 각각의 사이트에 접근하여 index.html 을 확인

모든 개발자의 파일을 일일이 내가 업로드 하는 것은 힘든 일이다.
- ftp 서버를 구축하고 개발자1,2,3이 각각 site1, site2, site3에만 접근 가능하도록 하자.
- 개발자 1, 2, 3은 파일질라 클라이언트를 이용해 test.html 파일을 작성하여 각각
자신의 폴더에 올린다. 내용은 아무내용이나 작성한다.
- 이미지 파일처럼 직접 작성하기 어려운 건 몰라도 문서 작성의 경우에는 문서를 작성한
후 파일질라고 다시 한번 전송하는 과정이 번거롭다.

에디트 플러스를 이용해 바로 원격지 서버에서 문서작업을 진행한다.
- test2.txt 파일일 작성하고 애국가 1절을 기입하여 저장
개발자2가 자신은 더이상 서비스를 하지 않겠다고 한다.
- 개발자2가 사용하던 포트와 폴더를 회수하고 ftp 유저에서 삭제한다.

놓치기 쉬운 것들
- 네트워크 설정을 잘 했는가?
    - 랜카드 켜기, 포트포워딩, 방화벽
- 서비스(데몬) 시작을 했는가?
- selinux가 활성화 되어 있지는 않은가?
- 설정에 오타가 있거나 빼먹은 것이 있지는 않은가?
- 접속정보를 잘 입력했는가? (특히 포트)